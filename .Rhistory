exit
q()
install.packages("devtools")
library("devtools", lib.loc="D:/Program Files/R/R-3.0.3/library")
find_rtools()
q()
x <- vector("numeric", lenght=10)
x <- vector("numeric", length=10)
x
q()
get()
getwd()
rm(list = ls())
x <- rnorm(100)
hist(x)
y <- rnorm(100)
plot(x,y)
z <- rnorm(100)
plot(x,y)
q()
q()
setwd("~/RepData_PeerAssessment1")
dataWeekdays <- data.frame(data, weeksday = weekdays(as.Date(data$date)))
dataWeekdays$weeksday <- as.character(dataWeekdays$weeksday)
for (n in 1:nrow(dataWeekdays)){
if (dataWeekdays$weeksday[n] == "星期六" || dataWeekdays$weeksday[n] == "星期日")
dataWeekdays$weeksday[n] = "weekend"
else
dataWeekdays$weeksday[n] = "weekday"
}
dataWeekdays$weeksday <- as.factor(dataWeekdays$weeksday)
data <- read.csv("activity.csv")
data$date <- as.factor(data$date)
data$interval <- as.factor(data$interval)
str(data)
dataWeekdays <- data.frame(data, weeksday = weekdays(as.Date(data$date)))
dataWeekdays$weeksday <- as.character(dataWeekdays$weeksday)
for (n in 1:nrow(dataWeekdays)){
if (dataWeekdays$weeksday[n] == "星期六" || dataWeekdays$weeksday[n] == "星期日")
dataWeekdays$weeksday[n] = "weekend"
else
dataWeekdays$weeksday[n] = "weekday"
}
dataWeekdays$weeksday <- as.factor(dataWeekdays$weeksday)
str(dataWeekdays)
stepsIntervalAverage <- data.frame (stepAverage = rep(0,length(levels(dataWeekdays$weeksday))*length(levels(dataWeekdays$interval))), interval = "0", weeksday = "星期一", stringsAsFactors = FALSE)
for (j in 1:length(levels(dataWeekdays$weeksday))){
for (i in 1:length(levels(dataWeekdays$interval))){
index = (j-1)*length(levels(dataWeekdays$interval))+i
stepsIntervalAverage$stepAverage[index] <- mean(subset(dataWeekdays$steps, dataWeekdays$interval == levels(dataWeekdays$interval)[i]) && dataWeekdays$weeksday == dataWeekdays$weeksday[j], na.rm = TRUE)
stepsIntervalAverage$interval[index] <- levels(dataWeekdays$interval)[i]
stepsIntervalAverage$weeksday[index] <- levels(dataWeekdays$weeksday)[i]
}
}
View(stepsIntervalAverage)
View(dataWeekdays)
dataWeekdays <- data.frame(data, weeksday = weekdays(as.Date(data$date)))
View(dataWeekdays)
View(data)
View(stepsIntervalAverage)
View(stepsIntervalAverage)
levels(dataWeekdays$interval)
levels(dataWeekdays$weeksday)
dataWeekdays <- data.frame(data, weeksday = weekdays(as.Date(data$date)))
dataWeekdays$weeksday <- as.character(dataWeekdays$weeksday)
for (n in 1:nrow(dataWeekdays)){
if (dataWeekdays$weeksday[n] == "星期六" || dataWeekdays$weeksday[n] == "星期日")
dataWeekdays$weeksday[n] = "weekend"
else
dataWeekdays$weeksday[n] = "weekday"
}
dataWeekdays$weeksday <- as.factor(dataWeekdays$weeksday)
stepsIntervalAverage <- data.frame (stepAverage = rep(0,length(levels(dataWeekdays$weeksday))*length(levels(dataWeekdays$interval))), interval = "0", weeksday = "星期一", stringsAsFactors = FALSE)
for (j in 1:length(levels(dataWeekdays$weeksday))){
for (i in 1:length(levels(dataWeekdays$interval))){
index = (j-1)*length(levels(dataWeekdays$interval))+i
stepsIntervalAverage$stepAverage[index] <- mean(subset(dataWeekdays$steps, dataWeekdays$interval == levels(dataWeekdays$interval)[i]) && dataWeekdays$weeksday == levels(dataWeekdays$weeksday)[j], na.rm = TRUE)
stepsIntervalAverage$interval[index] <- levels(dataWeekdays$interval)[i]
stepsIntervalAverage$weeksday[index] <- levels(dataWeekdays$weeksday)[j]
}
}
View(stepsIntervalAverage)
stepsIntervalAverage <- data.frame (stepAverage = rep(0,length(levels(dataWeekdays$weeksday))*length(levels(dataWeekdays$interval))), interval = "0", weeksday = "星期一", stringsAsFactors = FALSE)
for (j in 1:length(levels(dataWeekdays$weeksday))){
for (i in 1:length(levels(dataWeekdays$interval))){
index = (j-1)*length(levels(dataWeekdays$interval))+i
stepsIntervalAverage$stepAverage[index] <- mean(subset(dataWeekdays$steps, dataWeekdays$interval == levels(dataWeekdays$interval)[i] && dataWeekdays$weeksday == levels(dataWeekdays$weeksday)[j]), na.rm = TRUE)
stepsIntervalAverage$interval[index] <- levels(dataWeekdays$interval)[i]
stepsIntervalAverage$weeksday[index] <- levels(dataWeekdays$weeksday)[j]
}
}
View(stepsIntervalAverage)
mean(subset(dataWeekdays$steps, dataWeekdays$interval == levels(dataWeekdays$interval)[2] && dataWeekdays$weeksday == levels(dataWeekdays$weeksday)[1]), na.rm = TRUE)
levels(dataWeekdays$interval)[2]
dataWeekdays$weeksday == levels(dataWeekdays$weeksday)[1]
mean(subset(dataWeekdays$steps, dataWeekdays$interval == levels(dataWeekdays$interval)[2] && dataWeekdays$weeksday == levels(dataWeekdays$weeksday)[1]), na.rm = TRUE)
levels(dataWeekdays$weeksday)[1]
dataWeekdays$interval == levels(dataWeekdays$interval)[2] && dataWeekdays$weeksday == levels(dataWeekdays$weeksday)[1]
dataWeekdays$interval == levels(dataWeekdays$interval)[2]
dataWeekdays$interval == levels(dataWeekdays$interval)[2] && dataWeekdays$weeksday == levels(dataWeekdays$weeksday)[1]
dataWeekdays$interval == levels(dataWeekdays$interval)[2] & dataWeekdays$weeksday == levels(dataWeekdays$weeksday)[1]
summary(dataWeekdays$interval == levels(dataWeekdays$interval)[2] & dataWeekdays$weeksday == levels(dataWeekdays$weeksday)[1])
for (j in 1:length(levels(dataWeekdays$weeksday))){
for (i in 1:length(levels(dataWeekdays$interval))){
index = (j-1)*length(levels(dataWeekdays$interval))+i
stepsIntervalAverage$stepAverage[index] <- mean(subset(dataWeekdays$steps, dataWeekdays$interval == levels(dataWeekdays$interval)[i] & dataWeekdays$weeksday == levels(dataWeekdays$weeksday)[j]), na.rm = TRUE)
stepsIntervalAverage$interval[index] <- levels(dataWeekdays$interval)[i]
stepsIntervalAverage$weeksday[index] <- levels(dataWeekdays$weeksday)[j]
}
}
View(stepsIntervalAverage)
qplot(as.numeric(interval), stepAverage, data = stepsIntervalAverage, facets = weeksday~., geom = "line")
library("ggplot2")
qplot(as.numeric(interval), stepAverage, data = stepsIntervalAverage, facets = weeksday~., geom = "line")
?readRDS
q()
